# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/manan-arya/hackathon_bvp/blob/master/main.ipynb
"""

import pandas as pd
import numpy as np

!wget https://raw.githubusercontent.com/manan-arya/hackathon_bvp/master/backend/section_data.csv

data = pd.read_csv('section_data.csv')

data.head()

data.replace(np.nan,'-',inplace = True)

from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import OneHotEncoder

le = LabelEncoder()
data.iloc[:,-1] = le.fit_transform(data.iloc[:,-1])

data.head()

import sys

i1 = sys.argv[1]
#i2 = sys.argv[2]

#i1 ='code_of_criminal_procedure'
i2 = 'right_to_information'

useless_dict = {'description':[i1,i2]}

useless = pd.DataFrame(useless_dict)

useless

le.transform(useless)

for i in range(len(data)):
  if i1 == data.iloc[i,-1]:
    loc_1 = i
    break

for i in range(len(data)):
  if i2 == data.iloc[i,-1]:
    loc_2 = i
    break

print(loc_2)
loc_1

entry_dict = {'section_1':[data.section_1[loc_1]],'section_2':[data.section_1[loc_2]]}

entry = pd.DataFrame(entry_dict)

entry.head()

!wget https://raw.githubusercontent.com/manan-arya/hackathon_bvp/master/backend/section_data_2.csv

data_check = pd.read_csv('section_data_2.csv')

data_check

from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier()

data_check.replace(np.nan,0,inplace = True)

X = data_check.drop('label', axis = 1)

y = data_check['label']

knn.fit(X,y)

pred = knn.predict(entry)

print(pred)
sys.stdout.flush()

